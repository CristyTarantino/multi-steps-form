{"version":3,"sources":["components/header/styles.ts","components/header/index.tsx","components/footer/index.tsx","components/layout/styles.ts","components/layout/index.tsx","components/form-fields/InputField.tsx","components/form-fields/CheckboxField.tsx","components/pages/sign-up/Forms/UserForm.tsx","components/pages/sign-up/Forms/PrivacyForm.tsx","components/pages/sign-up/SignUpSuccess/index.tsx","models/SignUpForm/signUpFormModel.ts","models/SignUpForm/validationSchema.ts","models/SignUpForm/formInitialValues.ts","components/pages/sign-up/styles.ts","components/pages/sign-up/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["makeStyles","appBar","position","Header","themeState","onThemeChange","classes","useStyles","AppBar","color","className","Toolbar","Typography","variant","noWrap","Switch","checked","onChange","Footer","align","Link","href","Date","getFullYear","useStyle","theme","root","width","marginLeft","spacing","marginRight","breakpoints","up","paper","marginTop","marginBottom","padding","Layout","children","prefersDarkMode","useMediaQuery","useState","darkState","setDarkState","palletType","themePallette","createMuiTheme","palette","type","responsiveFontSizes","useEffect","ThemeProvider","CssBaseline","Paper","InputField","props","rest","useField","field","meta","TextField","id","name","error","touched","handleError","helperText","at","renderHelperText","CheckboxField","label","setValue","FormControl","FormControlLabel","value","control","Checkbox","e","target","defaultChecked","FormHelperText","UserForm","formField","firstName","role","email","password","gutterBottom","Grid","container","item","xs","sm","fullWidth","PrivacyForm","useEmailForUpdates","useEmailForCommunication","md","SignUpSuccess","Box","display","justifyContent","alignItems","fontSize","style","green","requiredErrorMsg","signUpFormModel","Yup","shape","required","matches","stepper","buttons","button","wrapper","margin","buttonProgress","top","left","formId","getStepContent","sleep","ms","Promise","resolve","setTimeout","SignUpPage","steps","stepsContent","activeStep","setActiveStep","activeStepContent","setActiveStepContent","currentValidationSchema","validationSchema","isLastStep","length","submitForm","values","actions","a","console","log","JSON","stringify","setSubmitting","prevActiveStep","handleBack","component","Stepper","map","Step","StepLabel","initialValues","formInitialValues","onSubmit","then","setTouched","handleNext","isSubmitting","Button","onClick","disabled","CircularProgress","size","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e147313b.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n  appBar: {\n    position: 'relative',\n  },\n}));\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Switch from '@material-ui/core/Switch';\nimport useStyles from './styles';\n\ntype HeaderProps = {\n  themeState: boolean;\n  onThemeChange: () => void;\n};\n\nconst Header: React.FC<HeaderProps> = ({\n  themeState,\n  onThemeChange,\n}): JSX.Element => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\n      <Toolbar>\n        <Typography variant=\"h6\" color=\"inherit\" noWrap>\n          Company Name\n        </Typography>\n        <Switch checked={themeState} onChange={onThemeChange} />\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Link, Typography } from '@material-ui/core/';\n\nconst Footer: React.FC = (): JSX.Element => (\n  <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n    {'Copyright © '}\n    <Link color=\"inherit\" href=\"https://google.co.uk/\">\n      Company Name\n    </Link>\n    {` ${new Date().getFullYear()}`}\n  </Typography>\n);\n\nexport default Footer;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyle = makeStyles(theme => ({\n  root: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n}));\n\nexport default useStyle;\n","import React, { useState, useEffect } from 'react';\nimport { Paper, CssBaseline } from '@material-ui/core';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport {\n  ThemeProvider,\n  responsiveFontSizes,\n  createMuiTheme,\n} from '@material-ui/core/styles';\n\nimport Header from 'components/header';\nimport Footer from 'components/footer';\n\nimport useStyle from './styles';\n\ntype Props = {\n  children: React.ReactChild;\n};\n\nconst Layout: React.FC<Props> = ({ children }): JSX.Element => {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  const [darkState, setDarkState] = useState(false);\n  const palletType = darkState ? 'dark' : 'light';\n  const themePallette = createMuiTheme({\n    palette: {\n      type: palletType,\n    },\n  });\n  const theme = responsiveFontSizes(themePallette);\n  const classes = useStyle(theme);\n\n  const handleThemeChange = () => {\n    setDarkState(!darkState);\n  };\n\n  useEffect(() => setDarkState(prefersDarkMode), [prefersDarkMode]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Header themeState={darkState} onThemeChange={handleThemeChange} />\n      <div className={classes.root}>\n        <Paper className={classes.paper}>{children}</Paper>\n      </div>\n      <Footer />\n    </ThemeProvider>\n  );\n};\n\nexport default Layout;\n","import React from 'react';\nimport { useField } from 'formik';\nimport at from 'lodash/at';\nimport { TextField } from '@material-ui/core';\n\ntype InputFieldProps = {\n  fullWidth: boolean;\n  label: string;\n  name: string;\n  type?: string;\n};\n\nconst InputField: React.FC<InputFieldProps> = (props): JSX.Element => {\n  const { type, ...rest } = props;\n  const [field, meta] = useField(props);\n\n  const renderHelperText = (): string | undefined => {\n    const [touched, error] = at(meta, 'touched', 'error');\n    if (touched && error) {\n      return error;\n    }\n\n    return undefined;\n  };\n\n  const handleError = (\n    touched: string | boolean,\n    error: string | undefined,\n  ): boolean | undefined => {\n    if (touched && touched !== '' && error && error !== '') {\n      return true;\n    }\n\n    return undefined;\n  };\n\n  return (\n    <TextField\n      id={field.name}\n      type={type || 'text'}\n      error={handleError(meta.touched, meta.error)}\n      helperText={renderHelperText()}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...field}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...rest}\n    />\n  );\n};\n\nexport default InputField;\n","import React from 'react';\nimport at from 'lodash/at';\nimport { useField, FieldHookConfig } from 'formik';\nimport {\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  FormHelperText,\n} from '@material-ui/core';\n\ntype CheckboxFieldProps = {\n  label: string;\n  defaultChecked: boolean;\n};\n\nconst CheckboxField: React.FC<\n  CheckboxFieldProps & FieldHookConfig<unknown>\n> = ({ label, ...rest }): JSX.Element => {\n  const [field, meta, helper] = useField(rest);\n  const { setValue } = helper;\n\n  const renderHelperText = (): JSX.Element | null => {\n    const [touched, error] = at(meta, 'touched', 'error');\n    if (touched && error) {\n      return <FormHelperText>{error}</FormHelperText>;\n    }\n\n    return null;\n  };\n\n  const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.checked);\n  };\n\n  return (\n    <FormControl>\n      <FormControlLabel\n        value={field.checked}\n        checked={field.checked}\n        control={\n          <Checkbox\n            // eslint-disable-next-line react/jsx-props-no-spreading\n            {...field}\n            onChange={handleOnChange}\n            defaultChecked={rest.defaultChecked}\n          />\n        }\n        label={label}\n      />\n      {renderHelperText()}\n    </FormControl>\n  );\n};\n\nexport default CheckboxField;\n","import React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport { InputField } from 'components/form-fields';\n\ntype UserFormProps = {\n  formField: {\n    firstName: {\n      name: string;\n      label: string;\n    };\n    role: {\n      name: string;\n      label: string;\n    };\n    email: {\n      name: string;\n      label: string;\n    };\n    password: {\n      name: string;\n      label: string;\n    };\n  };\n};\n\nconst UserForm: React.FC<UserFormProps> = ({ formField }): JSX.Element => {\n  const { firstName, role, email, password } = formField;\n\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        User\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={6}>\n          <InputField name={firstName.name} label={firstName.label} fullWidth />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <InputField name={role.name} label={role.label} fullWidth />\n        </Grid>\n        <Grid item xs={12}>\n          <InputField name={email.name} label={email.label} fullWidth />\n        </Grid>\n        <Grid item xs={12}>\n          <InputField\n            name={password.name}\n            label={password.label}\n            type=\"password\"\n            fullWidth\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default UserForm;\n","import React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport { CheckboxField } from 'components/form-fields';\n\ntype PrivacyFormProps = {\n  formField: {\n    useEmailForUpdates: {\n      name: string;\n      label: string;\n      checked: boolean;\n    };\n    useEmailForCommunication: {\n      name: string;\n      label: string;\n      checked: boolean;\n    };\n  };\n};\n\nconst PrivacyForm: React.FC<PrivacyFormProps> = ({\n  formField,\n}): JSX.Element => {\n  const { useEmailForUpdates, useEmailForCommunication } = formField;\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        Privacy\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6}>\n          <CheckboxField\n            name={useEmailForUpdates.name}\n            label={useEmailForUpdates.label}\n            defaultChecked={useEmailForUpdates.checked}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <CheckboxField\n            name={useEmailForCommunication.name}\n            label={useEmailForCommunication.label}\n            defaultChecked={useEmailForCommunication.checked}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default PrivacyForm;\n","import React from 'react';\nimport { Typography, Box } from '@material-ui/core';\nimport { green } from '@material-ui/core/colors';\nimport Done from '@material-ui/icons/Done';\n\nconst SignUpSuccess: React.FC = (): JSX.Element => (\n  <>\n    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n      <Done fontSize=\"large\" style={{ color: green[500] }} />\n    </Box>\n    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n      <Typography variant=\"subtitle1\">\n        Please verify your email address.\n      </Typography>\n    </Box>\n    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n      <Typography variant=\"subtitle1\">\n        You should have received an email from us already!\n      </Typography>\n    </Box>\n  </>\n);\n\nexport default SignUpSuccess;\n","export default {\n  formId: 'signUpForm',\n  formField: {\n    firstName: {\n      name: 'firstName',\n      label: 'name*',\n      requiredErrorMsg: 'First name is required',\n    },\n    role: {\n      name: 'role',\n      label: 'role',\n    },\n    email: {\n      name: 'email',\n      label: 'email*',\n      requiredErrorMsg: 'Email is required',\n    },\n    password: {\n      name: 'password',\n      label: 'password*',\n      requiredErrorMsg: 'Password is required',\n    },\n    useEmailForUpdates: {\n      name: 'useEmailForUpdates',\n      label: 'Receive updates about the Company product by email',\n      checked: true,\n    },\n    useEmailForCommunication: {\n      name: 'useEmailForCommunication',\n      label:\n        'Receive communication by email for other products created by the Company team',\n      checked: false,\n    },\n  },\n};\n","import * as Yup from 'yup';\nimport signUpFormModel from './signUpFormModel';\n\nconst {\n  formField: { firstName, email, password },\n} = signUpFormModel;\n\nexport default [\n  Yup.object().shape({\n    [firstName.name]: Yup.string().required(`${firstName.requiredErrorMsg}`),\n    [email.name]: Yup.string().email().required(`${email.requiredErrorMsg}`),\n    [password.name]: Yup.string()\n      .required(`${password.requiredErrorMsg}`)\n      .matches(\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d@$!%*#?&]{10,}$/,\n        'Password must have at least 10 characters, one number, one uppercase and one lowercase character',\n      ),\n  }),\n];\n","import signUpFormModel from './signUpFormModel';\n\nconst {\n  formField: {\n    firstName,\n    role,\n    email,\n    password,\n    useEmailForUpdates,\n    useEmailForCommunication,\n  },\n} = signUpFormModel;\n\nexport default {\n  [firstName.name]: '',\n  [role.name]: '',\n  [email.name]: '',\n  [password.name]: '',\n  [useEmailForUpdates.name]: true,\n  [useEmailForCommunication.name]: false,\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(theme => ({\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  buttonProgress: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n  },\n}));\n","import React, { useState } from 'react';\nimport {\n  Button,\n  CircularProgress,\n  Step,\n  StepLabel,\n  Stepper,\n  Typography,\n} from '@material-ui/core';\nimport { Form, Formik, FormikTouched } from 'formik';\n\nimport UserForm from './Forms/UserForm';\nimport PrivacyForm from './Forms/PrivacyForm';\nimport SignUpSuccess from './SignUpSuccess';\n\nimport validationSchema from '../../../models/SignUpForm/validationSchema';\nimport signUpFormModel from '../../../models/SignUpForm/signUpFormModel';\nimport formInitialValues from '../../../models/SignUpForm/formInitialValues';\n\nimport useStyles from './styles';\n\nconst { formId, formField } = signUpFormModel;\n\nconst getSteps = () => ['User', 'Privacy', 'Done'];\n\nconst getStepContent = () => [\n  <UserForm formField={formField} />,\n  <PrivacyForm formField={formField} />,\n];\n\nconst sleep = (ms: number) => {\n  return new Promise(resolve => setTimeout(resolve, ms));\n};\n\ntype actionsType = {\n  setTouched: (arg0: FormikTouched<{ [x: string]: string | boolean }>) => void;\n  setSubmitting: (arg0: boolean) => void;\n};\n\ntype valuesType = { [x: string]: string | boolean };\n\nconst SignUpPage: React.FC = (): JSX.Element => {\n  const classes = useStyles();\n  const steps = getSteps();\n  const stepsContent = getStepContent();\n  const [activeStep, setActiveStep] = useState(0);\n  const [activeStepContent, setActiveStepContent] = useState(0);\n  const currentValidationSchema = validationSchema[activeStepContent];\n  const isLastStep = activeStepContent === stepsContent.length - 1;\n\n  const submitForm = async (values: valuesType, actions: actionsType) => {\n    // pretend to make a call\n    await sleep(1000);\n    // eslint-disable-next-line no-console\n    console.log(JSON.stringify(values, null, 2));\n    actions.setSubmitting(false);\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setActiveStepContent(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleNext = (actions: actionsType) => {\n    setActiveStepContent(prevActiveStep => prevActiveStep + 1);\n    actions.setTouched({});\n    actions.setSubmitting(false);\n  };\n\n  const handleSubmit = (values: valuesType, actions: actionsType) => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n\n    if (isLastStep) {\n      submitForm(values, actions).then(() => ({}));\n    } else {\n      handleNext(actions);\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n    setActiveStepContent(prevActiveStep => prevActiveStep - 1);\n  };\n\n  return (\n    <>\n      <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n        Create a new account\n      </Typography>\n      <Stepper activeStep={activeStep} className={classes.stepper}>\n        {steps.map(label => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <>\n        {activeStepContent === steps.length - 1 ? (\n          <SignUpSuccess />\n        ) : (\n          <Formik\n            initialValues={formInitialValues}\n            validationSchema={currentValidationSchema}\n            onSubmit={handleSubmit}\n          >\n            {({ isSubmitting }) => (\n              <Form id={formId}>\n                {getStepContent()[activeStepContent]}\n\n                <div className={classes.buttons}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} className={classes.button}>\n                      Back\n                    </Button>\n                  )}\n                  <div className={classes.wrapper}>\n                    <Button\n                      disabled={isSubmitting}\n                      type=\"submit\"\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className={classes.button}\n                    >\n                      {isLastStep ? 'Submit' : 'Next'}\n                    </Button>\n                    {isSubmitting && (\n                      <CircularProgress\n                        size={24}\n                        className={classes.buttonProgress}\n                      />\n                    )}\n                  </div>\n                </div>\n              </Form>\n            )}\n          </Formik>\n        )}\n      </>\n    </>\n  );\n};\n\nexport default SignUpPage;\n","import React from 'react';\nimport Layout from 'components/layout';\nimport SignUp from 'components/pages/sign-up';\n\nconst App: React.FC = (): JSX.Element => (\n  <div className=\"App\">\n    <Layout>\n      <SignUp />\n    </Layout>\n  </div>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}